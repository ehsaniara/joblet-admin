version: "3.0"

# Multiple named workflows in one file
workflows:
  ml-training:
    name: "Machine Learning Training Pipeline"
    description: "Complete ML model training workflow"
    jobs:
      data-prep:
        command: "python3"
        args: [ "prepare_data.py" ]
        runtime: "python-3.11-ml"
        uploads:
          files: [ "prepare_data.py" ]
        volumes: [ "ml-pipeline" ]

      feature-selection:
        command: "python3"
        args: [ "select_features.py" ]
        runtime: "python-3.11-ml"
        uploads:
          files: [ "select_features.py" ]
        volumes: [ "ml-pipeline" ]
        requires:
          - data-prep: "COMPLETED"

      train-model:
        command: "python3"
        args: [ "train.py" ]
        runtime: "python-3.11-ml"
        uploads:
          files: [ "train.py" ]
        volumes: [ "ml-pipeline" ]
        requires:
          - feature-selection: "COMPLETED"

      evaluate-model:
        command: "python3"
        args: [ "evaluate.py" ]
        runtime: "python-3.11-ml"
        uploads:
          files: [ "evaluate.py" ]
        volumes: [ "ml-pipeline" ]
        requires:
          - train-model: "COMPLETED"
  
  deployment:
    name: "Model Deployment Pipeline"
    description: "Deploy trained model to production"
    jobs:
      package-model:
        command: "tar"
        args: [ "-czf", "model.tar.gz", "ml_data/" ]
        volumes: [ "ml-pipeline" ]

      test-model:
        command: "python3"
        args: [ "test_model.py" ]
        runtime: "python-3.11-ml"
        uploads:
          files: [ "test_model.py" ]
        volumes: [ "ml-pipeline" ]
        requires:
          - package-model: "COMPLETED"

      deploy-staging:
        command: "rsync"
        args: [ "-av", "model.tar.gz", "staging-server:/opt/models/" ]
        requires:
          - test-model: "COMPLETED"

      deploy-production:
        command: "rsync"
        args: [ "-av", "model.tar.gz", "prod-server:/opt/models/" ]
        requires:
          - deploy-staging: "COMPLETED"