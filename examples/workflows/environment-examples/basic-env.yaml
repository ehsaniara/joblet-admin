version: "3.0"

# Basic Environment Variable Example
# Shows how to set environment variables for individual jobs

jobs:
  # Job with basic environment variables
  setup-environment:
    command: "bash"
    args: [ "-c", "echo 'Environment: $APP_ENV' && echo 'Version: $APP_VERSION' && echo 'Debug: $DEBUG_MODE'" ]
    environment:
      APP_ENV: "development"
      APP_VERSION: "1.0.0"
      DEBUG_MODE: "true"
    resources:
      max_memory: 128
      max_cpu: 25

  # Job that writes configuration to shared volume
  create-config:
    command: "bash"
    args: [ "-c", "echo 'database_url=$DATABASE_URL' > /volumes/config/app.env && echo 'api_key=$API_KEY' >> /volumes/config/app.env && echo 'log_level=$LOG_LEVEL' >> /volumes/config/app.env" ]
    environment:
      DATABASE_URL: "postgresql://user:pass@localhost:5432/mydb"
      API_KEY: "secret-api-key-12345"
      LOG_LEVEL: "debug"
    volumes: [ "config" ]
    requires:
      - setup-environment: "COMPLETED"
    resources:
      max_memory: 128

  # Job that reads configuration from shared volume
  read-config:
    command: "bash"
    args: [ "-c", "echo 'Reading configuration:' && cat /volumes/config/app.env && echo 'My role: $JOB_ROLE'" ]
    environment:
      JOB_ROLE: "config-reader"
    volumes: [ "config" ]
    requires:
      - create-config: "COMPLETED"
    resources:
      max_memory: 128

  # Cleanup job
  cleanup:
    command: "bash"
    args: [ "-c", "echo 'Cleaning up with mode: $CLEANUP_MODE' && rm -f /volumes/config/app.env" ]
    environment:
      CLEANUP_MODE: "thorough"
    volumes: [ "config" ]
    requires:
      - read-config: "COMPLETED"
    resources:
      max_memory: 64