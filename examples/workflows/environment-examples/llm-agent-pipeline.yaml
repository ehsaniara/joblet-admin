version: "3.0"

# LLM Agent Pipeline with Environment Variables
# Shows how to deploy an agentic AI system with multiple specialized agents

jobs:
  # Setup shared configuration for agents
  setup-agent-config:
    command: "python3"
    args: [ "setup_agents.py" ]
    environment:
      AGENT_FRAMEWORK: "langchain"
      MODEL_TYPE: "llama-2-70b"
      TEMPERATURE: "0.7"
      MAX_TOKENS: "2048"
      CONFIG_PATH: "/volumes/config"
      LOG_LEVEL: "info"
    secret_environment:
      OPENAI_API_KEY: "your_api_key_here"
      ANTHROPIC_API_KEY: "anthropic_key_here"
    volumes: [ "config", "logs" ]
    resources:
      max_memory: 2048

  # Research Agent - Gathers information
  research-agent:
    command: "python3"
    args: [ "research_agent.py" ]
    environment:
      AGENT_NAME: "research"
      TASK_QUEUE: "/volumes/tasks/research"
      OUTPUT_PATH: "/volumes/results/research"
      SEARCH_DEPTH: "10"
      MAX_SOURCES: "20"
      VERIFICATION_LEVEL: "high"
    secret_environment:
      SEARCH_API_KEY: "search_engine_api_key"
      ARXIV_API_KEY: "arxiv_api_key"
    volumes: [ "config", "tasks", "results", "logs" ]
    requires:
      - setup-agent-config: "COMPLETED"
    resources:
      max_memory: 4096
      max_cpu: 200

  # Analysis Agent - Processes research findings
  analysis-agent:
    command: "python3"
    args: [ "analysis_agent.py" ]
    environment:
      AGENT_NAME: "analysis"
      INPUT_PATH: "/volumes/results/research"
      OUTPUT_PATH: "/volumes/results/analysis"
      ANALYSIS_TYPE: "comprehensive"
      USE_CITATIONS: "true"
      FACT_CHECK: "true"
    volumes: [ "config", "results", "logs" ]
    requires:
      - research-agent: "COMPLETED"
    resources:
      max_memory: 8192
      max_cpu: 300

  # Code Generation Agent
  code-generation-agent:
    command: "python3"
    args: [ "code_agent.py" ]
    environment:
      AGENT_NAME: "code_generator"
      TASK_PATH: "/volumes/tasks/coding"
      OUTPUT_PATH: "/volumes/results/code"
      LANGUAGE: "python"
      TEST_GENERATION: "true"
      DOCUMENTATION: "true"
      CODE_STYLE: "pep8"
    volumes: [ "config", "tasks", "results", "logs" ]
    requires:
      - setup-agent-config: "COMPLETED"
    resources:
      max_memory: 4096
      max_cpu: 200

  # Review Agent - Reviews and validates outputs
  review-agent:
    command: "python3"
    args: [ "review_agent.py" ]
    environment:
      AGENT_NAME: "reviewer"
      RESEARCH_PATH: "/volumes/results/research"
      ANALYSIS_PATH: "/volumes/results/analysis"
      CODE_PATH: "/volumes/results/code"
      OUTPUT_PATH: "/volumes/results/review"
      REVIEW_CRITERIA: "accuracy,completeness,quality"
    volumes: [ "config", "results", "logs" ]
    requires:
      - analysis-agent: "COMPLETED"
      - code-generation-agent: "COMPLETED"
    resources:
      max_memory: 4096
      max_cpu: 200

  # Synthesis Agent - Combines all outputs
  synthesis-agent:
    command: "python3"
    args: [ "synthesis_agent.py" ]
    environment:
      AGENT_NAME: "synthesis"
      INPUT_BASE: "/volumes/results"
      OUTPUT_PATH: "/volumes/final"
      FORMAT: "markdown"
      INCLUDE_SUMMARY: "true"
      INCLUDE_RECOMMENDATIONS: "true"
    volumes: [ "config", "results", "final", "logs" ]
    requires:
      - review-agent: "COMPLETED"
    resources:
      max_memory: 4096
      max_cpu: 200

  # Generate final report
  generate-agent-report:
    command: "python3"
    args: [ "generate_report.py" ]
    environment:
      RESULTS_PATH: "/volumes/final"
      LOGS_PATH: "/volumes/logs"
      REPORT_PATH: "/volumes/final/agent_report.html"
      INCLUDE_METRICS: "true"
      INCLUDE_TIMELINE: "true"
    volumes: [ "final", "logs" ]
    requires:
      - synthesis-agent: "COMPLETED"
    resources:
      max_memory: 2048